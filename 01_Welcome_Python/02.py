# Способы форматирования строк (стр. 24)


# Способ 1 через оператор %
print('\n' + '-' *100)
print('Способ 1 через оператор %')
'''
%s Строка
%d Десятичное число
%f Число с плавающей точкой
%o Число в восьмеричной системе
%x Число в шестнадцатеричной системе
'''
name = 'Max'
age = 25
print('Введено имя %s ему %d лет' % (name, age))
print('\n' + '-' *100)

# Способ 2 через метод format()
print('Способ 2 через метод format()')
el_1, el_2, el_3, el_4 = 1, 2, 3, 4
print('-> вывод переменной')
print('{}'.format([el_1, el_2, el_3, el_4]))

print('-> вывод столбцами одинаковой ширины по 20 символов с выравниванием по правой стороне (>), по левой стороне (<)')
print("{:>20} {:>20} {:>20}".format('my_param_1', 'my_param_2', 'my_param_3'))

print('-> вывод c указанием количества цифр после запятой')
print("{:.3f}".format(5.0/3))

print('-> выводом параметров через указание их индексов в фигурных скобках')
print('Третья переменная: {2}; Вторая переменная: {1}; Первая переменная: {0}'.format(el_1, el_2, el_3))
print('\n' + '-' *100)


# Способ 3 через f-строки
print('Способ 3 через f-строки')
ip = '192.168.1.4'
mask = 10
print('-> вывод переменых')
print(f"ip-params: {ip}, mask: {mask}")
print('\n' + '-' *100)

print('-> вывод выражений, использование функций и методов')
octets = ['10', '1', '1', '1']
mask = 10
print(f"ip-params: {1 + 1}, mask: {mask}") # выражение
print(f"ip-params: {max(octets)}, mask: {mask}") # функция
print(f"ip-params: {'.'.join(octets)}, mask: {mask}") # метод

print('-> вывод столбцами с одинаковым расстоянием между ними')
oct1, oct2, oct3, oct4 = [10, 1, 1, 1]
print(f'IP address: {oct1:<8} {oct2:<8} {oct3:<8} {oct4:<8}')